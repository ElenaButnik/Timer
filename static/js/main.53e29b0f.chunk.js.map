{"version":3,"sources":["components/timer/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["Timer","useState","sec","setSec","startStop","setStartStop","time","Date","toISOString","slice","useEffect","stream$","Subject","interval","pipe","takeUntil","subscribe","val","next","complete","className","onClick","click$","fromEvent","document","buffer","debounceTime","map","clicks","length","filter","clicksLength","_","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+SAae,SAASA,IACtB,MAAsBC,mBAAS,GAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEIC,EAAO,IAAIC,KAAKL,GAAKM,cAAcC,MAAM,GAAI,IAEjDC,qBAAU,WACR,IAAMC,EAAU,IAAIC,IAUpB,OARAC,YAAS,KACNC,KAAKC,YAAUJ,IACfK,WAAU,WACLZ,GACFD,GAAO,SAACc,GAAD,OAASA,EAAM,UAIrB,WACLN,EAAQO,OACRP,EAAQQ,cAET,CAACf,IA0BJ,OACE,qBAAKgB,UAAU,YAAf,SACE,sBAAKA,UAAU,UAAf,UACE,uCACA,oBAAIA,UAAU,OAAd,SAAsBd,IACtB,wBAAQc,UAAU,SAASC,QA7BnB,WACPjB,EAEMA,IACTC,GAAa,GACbF,EAAO,IAHPE,GAAa,IA2BX,wBAGA,wBAAQe,UAAU,SAASC,QAvBnB,kBAAMlB,EAAO,IAuBrB,mBAGA,wBAAQiB,UAAU,SAASC,QAxBb,WAClB,IAAMC,EAASC,YAAUC,SAAU,SACdF,EAAOR,KAC1BW,YAAOH,EAAOR,KAAKY,YAAa,OAChCC,aAAI,SAACC,GAAD,OAAYA,EAAOC,UACvBC,aAAO,SAACC,GAAD,OAAkBA,GAAgB,MAG9Bf,WAAU,SAACgB,GACtB3B,GAAa,OAeX,uBC5DO4B,MARf,WACE,OACE,qBAAKb,UAAU,MAAf,SACE,cAACpB,EAAD,OCMSkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASsB,eAAe,SAM1BZ,M","file":"static/js/main.53e29b0f.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\"\nimport {\n  interval,\n  takeUntil,\n  Subject,\n  fromEvent,\n  buffer,\n  map,\n  filter,\n  debounceTime,\n} from \"rxjs\"\nimport \"./timer.css\"\n\nexport default function Timer() {\n  const [sec, setSec] = useState(0)\n  const [startStop, setStartStop] = useState(false)\n\n  let time = new Date(sec).toISOString().slice(11, 19)\n\n  useEffect(() => {\n    const stream$ = new Subject()\n\n    interval(1000)\n      .pipe(takeUntil(stream$))\n      .subscribe(() => {\n        if (startStop) {\n          setSec((val) => val + 1000)\n        }\n      });\n\n    return () => {\n      stream$.next()\n      stream$.complete()\n    };\n  }, [startStop]);\n\n  const start = () => {\n    if (!startStop) {\n      setStartStop(true)\n    } else if (startStop) {\n      setStartStop(false)\n      setSec(0);\n    }\n  };\n\n  const reset = () => setSec(0);\n\n  const doubleClick = () => {\n    const click$ = fromEvent(document, \"click\")\n    const doubleClick$ = click$.pipe(\n      buffer(click$.pipe(debounceTime(300))),\n      map((clicks) => clicks.length),\n      filter((clicksLength) => clicksLength >= 2)\n    );\n\n    doubleClick$.subscribe((_) => {\n      setStartStop(false)\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"contant\">\n        <h1>Timer</h1>\n        <h2 className=\"time\">{time}</h2>\n        <button className=\"button\" onClick={start}>\n          Start/Stop\n        </button>\n        <button className=\"button\" onClick={reset}>\n          Reset\n        </button>\n        <button className=\"button\" onClick={doubleClick}>\n          Wait\n        </button>\n      </div>\n    </div>\n  );\n}\n","import \"./App.css\"\nimport Timer from \"./components/timer/Timer\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Timer />\n    </div>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}